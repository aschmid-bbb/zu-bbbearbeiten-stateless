name: Release from tag

on:
  push:
    tags:
      - "*"

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Publish release
        id: publish-release
        uses: ghalactic/github-release-from-tag@v5
        with:
          prerelease: "false"
          reactions: heart,rocket,eyes

  executable:
    runs-on: windows-latest
    timeout-minutes: 10
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: "3.11"
          spec: "main.spec"
          requirements: "requirements.txt"
          upload_exe_with_name: "zu-bbbearbeiten.exe"

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} ./dist/main.exe

  docker-publish:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build
        run: docker build -t flask-app .

      - name: Docker tag
        run: docker tag flask-app ghcr.io/aschmid-bbb/zu-bbbearbeiten-stateless/flask-app:latest

      - name: Docker push
        run: docker push ghcr.io/aschmid-bbb/zu-bbbearbeiten-stateless/flask-app:latest

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: "3.11"

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2

        with:
          name: python-app
          path: .

      - name: "Deploy to Azure Web App"
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: "bbb-todo-with-db"
          slot-name: "production"
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_EF20CC83CE164C659921082B1212FB90 }}
